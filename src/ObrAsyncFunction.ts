import OBR, {
    buildBillboard,
    buildCurve,
    buildEffect,
    buildImage,
    buildImageUpload,
    buildLabel,
    buildLight,
    buildLine,
    buildPath,
    buildPointer,
    buildRuler,
    buildSceneUpload,
    buildShape,
    buildText,
    buildWall,
    isBillboard,
    isCurve,
    isEffect,
    isImage,
    isLabel,
    isLight,
    isLine,
    isPath,
    isPointer,
    isRuler,
    isShape,
    isText,
    isWall,
    Math2,
    MathM,
} from "@owlbear-rodeo/sdk";

// eslint-disable-next-line prefer-arrow-functions/prefer-arrow-functions
const AsyncFunction = async function () {
    // no content since we're just getting the constructor
}.constructor;

export type ObrAsyncFunction<Args extends unknown[]> = (
    obr: typeof OBR,
    math2: typeof Math2,
    mathM: typeof MathM,
    _buildBillboard: typeof buildBillboard,
    _isBillboard: typeof isBillboard,
    _buildCurve: typeof buildCurve,
    _isCurve: typeof isCurve,
    _buildEffect: typeof buildEffect,
    _isEffect: typeof isEffect,
    _buildImage: typeof buildImage,
    _isImage: typeof isImage,
    _buildLabel: typeof buildLabel,
    _isLabel: typeof isLabel,
    _buildLight: typeof buildLight,
    _isLight: typeof isLight,
    _buildLine: typeof buildLine,
    _isLine: typeof isLine,
    _buildPointer: typeof buildPointer,
    _isPointer: typeof isPointer,
    _buildRuler: typeof buildRuler,
    _isRuler: typeof isRuler,
    _buildShape: typeof buildShape,
    _isShape: typeof isShape,
    _buildText: typeof buildText,
    _isText: typeof isText,
    _buildPath: typeof buildPath,
    _isPath: typeof isPath,
    _buildWall: typeof buildWall,
    _isWall: typeof isWall,
    _buildImageUpload: typeof buildImageUpload,
    _buildSceneUpload: typeof buildSceneUpload,
    ...args: Args
) => Promise<void>;

export function compileObrAsyncFunction<Args extends unknown[]>(
    code: string,
    parameters: string[],
) {
    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call
    const obrAsyncFunction: ObrAsyncFunction<Args> = AsyncFunction(
        "OBR",
        "Math2",
        "MathM",
        "buildBillboard",
        "isBillboard",
        "buildCurve",
        "isCurve",
        "buildEffect",
        "isEffect",
        "buildImage",
        "isImage",
        "buildLabel",
        "isLabel",
        "buildLight",
        "isLight",
        "buildLine",
        "isLine",
        "buildPointer",
        "isPointer",
        "buildRuler",
        "isRuler",
        "buildShape",
        "isShape",
        "buildText",
        "isText",
        "buildPath",
        "isPath",
        "buildWall",
        "isWall",
        "buildImageUpload",
        "buildSceneUpload",
        ...parameters,
        "'use strict';" + code,
    );
    return obrAsyncFunction;
}

export function executeObrAsyncFunction<Args extends unknown[]>(
    obrAsyncFunction: ObrAsyncFunction<Args>,
    ...args: Args
): Promise<void> {
    return obrAsyncFunction(
        OBR,
        Math2,
        MathM,
        buildBillboard,
        isBillboard,
        buildCurve,
        isCurve,
        buildEffect,
        isEffect,
        buildImage,
        isImage,
        buildLabel,
        isLabel,
        buildLight,
        isLight,
        buildLine,
        isLine,
        buildPointer,
        isPointer,
        buildRuler,
        isRuler,
        buildShape,
        isShape,
        buildText,
        isText,
        buildPath,
        isPath,
        buildWall,
        isWall,
        buildImageUpload,
        buildSceneUpload,
        ...args,
    );
}
